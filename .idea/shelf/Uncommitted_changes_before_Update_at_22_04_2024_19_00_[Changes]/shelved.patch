Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>target/\r\n!.mvn/wrapper/maven-wrapper.jar\r\n!**/src/main/**/target/\r\n!**/src/test/**/target/\r\n\r\n### IntelliJ IDEA ###\r\n.idea/modules.xml\r\n.idea/jarRepositories.xml\r\n.idea/compiler.xml\r\n.idea/libraries/\r\n*.iws\r\n*.iml\r\n*.ipr\r\n\r\n### Eclipse ###\r\n.apt_generated\r\n.classpath\r\n.factorypath\r\n.project\r\n.settings\r\n.springBeans\r\n.sts4-cache\r\n\r\n### NetBeans ###\r\n/nbproject/private/\r\n/nbbuild/\r\n/dist/\r\n/nbdist/\r\n/.nb-gradle/\r\nbuild/\r\n!**/src/main/**/build/\r\n!**/src/test/**/build/\r\n\r\n### VS Code ###\r\n.vscode/\r\n\r\n### Mac OS ###\r\n.DS_Store\r\n/.idea/uiDesigner.xml\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 427a097dcc13b81ff7c54143c36a13644c7073c3)
+++ b/.gitignore	(date 1713804525515)
@@ -37,3 +37,5 @@
 ### Mac OS ###
 .DS_Store
 /.idea/uiDesigner.xml
+/.idea/shelf/Uncommitted_changes_before_Update_at_22_04_2024_18_13_[Changes]/shelved.patch
+/.idea/shelf/Uncommitted_changes_before_Update_at_22_04_2024_18_13__Changes_.xml
Index: src/main/java/com/alende/judith/controller/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/alende/judith/controller/ProductController.java b/src/main/java/com/alende/judith/controller/ProductController.java
new file mode 100644
--- /dev/null	(date 1713805230662)
+++ b/src/main/java/com/alende/judith/controller/ProductController.java	(date 1713805230662)
@@ -0,0 +1,29 @@
+package com.alende.judith.controller;
+
+import java.util.List;
+
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+
+import com.alende.judith.dto.ProductRequest;
+import com.alende.judith.dto.ProductResponse;
+
+public interface ProductController {
+
+    @PostMapping("/api/product")
+    ResponseEntity<ProductResponse> createProduct(@RequestBody ProductRequest request);
+
+    @PostMapping("/api/product/{id}")
+    ResponseEntity<ProductResponse> getProductById(@PathVariable int id);
+
+    @PostMapping("/api/products")
+    ResponseEntity<List<ProductResponse>> getAllProducts();
+
+    @PostMapping("/api/product/{id}")
+    ResponseEntity<ProductResponse> updateProduct(@PathVariable int id, @RequestBody ProductRequest request);
+
+    @PostMapping("/api/product/{id}")
+    ResponseEntity<Void> deleteProduct(@PathVariable int id);
+}
Index: src/main/java/com/alende/judith/controller/impl/CartControllerImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/alende/judith/controller/impl/CartControllerImpl.java b/src/main/java/com/alende/judith/controller/impl/CartControllerImpl.java
new file mode 100644
--- /dev/null	(date 1713805230671)
+++ b/src/main/java/com/alende/judith/controller/impl/CartControllerImpl.java	(date 1713805230671)
@@ -0,0 +1,101 @@
+package com.alende.judith.controller.impl;
+
+import java.time.LocalDateTime;
+import java.util.List;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RestController;
+
+import com.alende.judith.controller.CartController;
+import com.alende.judith.dto.CartResponse;
+import com.alende.judith.dto.ProductRequest;
+import com.alende.judith.model.Cart;
+import com.alende.judith.model.Product;
+import com.alende.judith.service.CartService;
+
+@RestController
+public class CartControllerImpl implements CartController {
+
+    @Autowired
+    CartService cartService;
+
+    @Override
+    public ResponseEntity<CartResponse> createCart(@RequestBody List<ProductRequest> productRequests) {
+
+        if(productRequests == null || productRequests.isEmpty()) {
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
+        }
+
+        for(ProductRequest pr : productRequests) {
+            if(pr.getId() <= 0 || pr.getDescription() == null || pr.getDescription().trim()
+                    .isEmpty() || pr.getAmount() <= 0) {
+                return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
+            }
+        }
+
+        final var products = productRequests.stream()
+                .map(pr -> new Product(pr.getId(), pr.getDescription(), pr.getAmount()))
+                .toList();
+        final var cart = cartService.createCart(products);
+        return ResponseEntity.status(HttpStatus.CREATED).body(new CartResponse(cart));
+    }
+
+    @Override
+    public ResponseEntity<CartResponse> getCartById(Long cartId) {
+
+        Cart cart = cartService.getCartById(cartId);
+        if(cart == null) {
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
+        }
+        return ResponseEntity.status(HttpStatus.OK).body(new CartResponse(cart));
+    }
+
+    @Override
+    public ResponseEntity<CartResponse> addProductToCart(Long cartId, ProductRequest productRequest) {
+
+        if(productRequest == null || productRequest.getId() <= 0 || productRequest.getDescription() == null
+                || productRequest.getDescription().isEmpty() || productRequest.getAmount() <= 0) {
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
+        }
+
+        final var cart = cartService.getCartById(cartId);
+        if(cart == null) {
+            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
+        }
+        final var product = new Product(productRequest.getId(), productRequest.getDescription(),
+                productRequest.getAmount());
+        final var updatedCart = cartService.addProductToCart(cart.getId(), product);
+
+        if(updatedCart.getProducts().size() == 1) {
+            updatedCart.setExpiryTime(LocalDateTime.now().plusMinutes(10));
+        }
+        return ResponseEntity.status(HttpStatus.OK).body(new CartResponse(updatedCart));
+    }
+
+    @Override
+    public ResponseEntity<CartResponse> removeProductFromCart(Long cartId, Integer productId) {
+        Cart cart = cartService.getCartById(cartId);
+        if(cart == null) {
+            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
+        }
+        Cart updatedCart = cartService.removeProductFromCart(cartId, productId);
+        if(updatedCart == null) {
+            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
+        }
+        return ResponseEntity.status(HttpStatus.OK).body(new CartResponse(updatedCart));
+    }
+
+    @Override
+    public ResponseEntity<Void> deleteCart(Long cartId) {
+        final var cart = cartService.getCartById(cartId);
+        if (cart == null) {
+            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
+        }
+
+        cartService.deleteCart(cartId);
+        return ResponseEntity.status(HttpStatus.OK).build();
+    }
+}
Index: src/main/java/com/alende/judith/controller/impl/ProductControllerImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/alende/judith/controller/impl/ProductControllerImpl.java b/src/main/java/com/alende/judith/controller/impl/ProductControllerImpl.java
new file mode 100644
--- /dev/null	(date 1713805230643)
+++ b/src/main/java/com/alende/judith/controller/impl/ProductControllerImpl.java	(date 1713805230643)
@@ -0,0 +1,74 @@
+package com.alende.judith.controller.impl;
+
+import java.util.List;
+import java.util.stream.Collectors;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RestController;
+
+import com.alende.judith.controller.ProductController;
+import com.alende.judith.dto.ProductRequest;
+import com.alende.judith.dto.ProductResponse;
+import com.alende.judith.model.Product;
+import com.alende.judith.service.ProductService;
+
+@RestController
+public class ProductControllerImpl implements ProductController {
+
+    @Autowired
+    ProductService productService;
+
+    @Override
+    public ResponseEntity<ProductResponse> createProduct(@RequestBody ProductRequest request) {
+        if (request.getDescription() == null || request.getDescription().trim().isEmpty() || request.getAmount() <= 0) {
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
+        }
+        final var product = productService.createProduct(request.getDescription(), request.getAmount());
+        return ResponseEntity.status(HttpStatus.CREATED).body(new ProductResponse(product));
+    }
+
+    @Override
+    public ResponseEntity<ProductResponse> getProductById(@PathVariable int id) {
+
+        final var product = productService.getProductById(id);
+        if (product == null) {
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
+        }
+        ProductResponse response = new ProductResponse(product);
+        return ResponseEntity.status(HttpStatus.OK).body(response);
+    }
+
+    @Override
+    public ResponseEntity<List<ProductResponse>> getAllProducts() {
+
+        List<ProductResponse> responses = productService.getProducts().stream().map(ProductResponse::new)
+                .collect(Collectors.toList());
+        return ResponseEntity.status(HttpStatus.OK).body(responses);
+    }
+
+    @Override
+    public ResponseEntity<ProductResponse> updateProduct(@PathVariable int id, @RequestBody ProductRequest request) {
+
+        if (request.getDescription() == null || request.getDescription().trim().isEmpty() || request.getAmount() <= 0) {
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
+        }
+        Product product = new Product(id, request.getDescription(), request.getAmount());
+        Product updatedProduct = productService.updateProduct(id, product);
+        if (updatedProduct == null) {
+            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
+        }
+        ProductResponse response = new ProductResponse(updatedProduct);
+        return ResponseEntity.status(HttpStatus.OK).body(response);
+    }
+
+    @Override
+    public ResponseEntity<Void> deleteProduct(@PathVariable int id) {
+
+        productService.deleteProduct(id);
+        return ResponseEntity.status(HttpStatus.OK).build();
+    }
+}
Index: src/main/java/com/alende/judith/dto/CartResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/alende/judith/dto/CartResponse.java b/src/main/java/com/alende/judith/dto/CartResponse.java
new file mode 100644
--- /dev/null	(date 1713805230650)
+++ b/src/main/java/com/alende/judith/dto/CartResponse.java	(date 1713805230650)
@@ -0,0 +1,37 @@
+package com.alende.judith.dto;
+
+import java.io.Serial;
+import java.io.Serializable;
+import java.time.LocalDateTime;
+import java.util.Map;
+import java.util.stream.Collectors;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import com.alende.judith.model.Cart;
+
+@Data
+@AllArgsConstructor
+@NoArgsConstructor
+public class CartResponse implements Serializable {
+
+    @Serial
+    private static final long serialVersionUID = -2265008860347503245L;
+
+    Long id;
+
+    private Map<Integer, ProductResponse> products;
+
+    private LocalDateTime expiryTime;
+
+    public CartResponse(Cart cart) {
+
+        this.id = cart.getId();
+        this.products = cart.getProducts().entrySet().stream()
+                .collect(Collectors.toMap(Map.Entry::getKey,
+                        entry -> new ProductResponse(entry.getValue())));
+        this.expiryTime = cart.getExpiryTime();
+    }
+}
Index: src/main/java/com/alende/judith/controller/CartController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/alende/judith/controller/CartController.java b/src/main/java/com/alende/judith/controller/CartController.java
new file mode 100644
--- /dev/null	(date 1713805230679)
+++ b/src/main/java/com/alende/judith/controller/CartController.java	(date 1713805230679)
@@ -0,0 +1,31 @@
+package com.alende.judith.controller;
+
+import java.util.List;
+
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.DeleteMapping;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+
+import com.alende.judith.dto.CartResponse;
+import com.alende.judith.dto.ProductRequest;
+
+public interface CartController {
+
+    @PostMapping("/api/cart")
+    ResponseEntity<CartResponse> createCart(@RequestBody List<ProductRequest> productRequests);
+
+    @GetMapping("/api/cart/{id}")
+    ResponseEntity<CartResponse> getCartById(@PathVariable("id") Long cartId);
+
+    @PostMapping("/api/cart/{id}/products")
+    ResponseEntity<CartResponse> addProductToCart(@PathVariable("id") Long cartId, @RequestBody ProductRequest product);
+
+    @DeleteMapping("/api/cart/{id}/products/{productId}")
+    ResponseEntity<CartResponse> removeProductFromCart(@PathVariable("id") Long cartId, @PathVariable("productId") Integer productId);
+
+    @DeleteMapping("/api/cart/{id}")
+    ResponseEntity<Void> deleteCart(@PathVariable("id") Long cartId);
+}
\ No newline at end of file
Index: src/test/java/com/alende/judith/controller/impl/CartControllerImplTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/com/alende/judith/controller/impl/CartControllerImplTest.java b/src/test/java/com/alende/judith/controller/impl/CartControllerImplTest.java
new file mode 100644
--- /dev/null	(date 1713805230656)
+++ b/src/test/java/com/alende/judith/controller/impl/CartControllerImplTest.java	(date 1713805230656)
@@ -0,0 +1,6 @@
+package com.alende.judith.controller.impl;
+
+import static org.junit.jupiter.api.Assertions.*;
+class CartControllerImplTest {
+  
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"graalvm-jdk-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 427a097dcc13b81ff7c54143c36a13644c7073c3)
+++ b/.idea/misc.xml	(date 1713804453009)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="MavenProjectsManager">
     <option name="originalFiles">
       <list>
Index: src/main/java/com/alende/judith/dto/ProductResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/alende/judith/dto/ProductResponse.java b/src/main/java/com/alende/judith/dto/ProductResponse.java
new file mode 100644
--- /dev/null	(date 1713805230685)
+++ b/src/main/java/com/alende/judith/dto/ProductResponse.java	(date 1713805230685)
@@ -0,0 +1,29 @@
+package com.alende.judith.dto;
+
+import java.io.Serial;
+import java.io.Serializable;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import com.alende.judith.model.Product;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class ProductResponse implements Serializable {
+
+    @Serial
+    private static final long serialVersionUID = -6053467124601868172L;
+
+    int id;
+    String description;
+    double amount;
+
+    public ProductResponse(Product product) {
+        this.id = product.getId();
+        this.description = product.getDescription();
+        this.amount = product.getAmount();
+    }
+}
\ No newline at end of file
Index: src/main/java/com/alende/judith/dto/ProductRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/alende/judith/dto/ProductRequest.java b/src/main/java/com/alende/judith/dto/ProductRequest.java
new file mode 100644
--- /dev/null	(date 1713805230637)
+++ b/src/main/java/com/alende/judith/dto/ProductRequest.java	(date 1713805230637)
@@ -0,0 +1,15 @@
+package com.alende.judith.dto;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class ProductRequest {
+
+    int id;
+    String description;
+    double amount;
+}
Index: src/main/java/com/alende/judith/config/ProductInitializer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/alende/judith/config/ProductInitializer.java b/src/main/java/com/alende/judith/config/ProductInitializer.java
new file mode 100644
--- /dev/null	(date 1713805230628)
+++ b/src/main/java/com/alende/judith/config/ProductInitializer.java	(date 1713805230628)
@@ -0,0 +1,30 @@
+package com.alende.judith.config;
+
+import jakarta.annotation.PostConstruct;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Profile;
+
+import com.alende.judith.service.ProductService;
+
+@Configuration
+@Profile("dev")
+public class ProductInitializer {
+
+    final Logger logger = LoggerFactory.getLogger(ProductInitializer.class);
+
+    @Autowired
+    ProductService productService;
+
+    @PostConstruct
+    public void init() {
+
+        logger.info("Creating initial products");
+        productService.createProduct("Product 1", 100);
+        productService.createProduct("Product 2", 200);
+        productService.createProduct("Product 3", 300);
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f0ab4948-00dc-4938-904c-1ed0a6ca9dc3\" name=\"Changes\" comment=\"Model creation\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_COMMON_BRANCH\" value=\"master\" />\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"ROOT_SYNC\" value=\"SYNC\" />\r\n  </component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/JUTHALEN/ecommerce.git\",\r\n    \"accountId\": \"00436225-b931-470f-bf74-c96cc9c14374\"\r\n  }\r\n}]]></component>\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollFromSource\" value=\"true\" />\r\n    <option name=\"autoscrollToSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"openDirectoriesWithSingleClick\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_MARK_IGNORED_FILES_AS_EXCLUDED\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"feature/jalende-create-model\",\r\n    \"kotlin-language-version-configured\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"ecommerce\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"ecommerce\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f0ab4948-00dc-4938-904c-1ed0a6ca9dc3\" name=\"Changes\" comment=\"\" />\r\n      <created>1713799732422</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1713799732422</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Model creation\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713800563712</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713800563712</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Model creation\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713800691111</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713800691111</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Model creation\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Model creation\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 427a097dcc13b81ff7c54143c36a13644c7073c3)
+++ b/.idea/workspace.xml	(date 1713805237340)
@@ -4,7 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="f0ab4948-00dc-4938-904c-1ed0a6ca9dc3" name="Changes" comment="Model creation" />
+    <list default="true" id="f0ab4948-00dc-4938-904c-1ed0a6ca9dc3" name="Changes" comment="Add test">
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/alende/judith/config/ProductInitializer.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/alende/judith/controller/CartController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/alende/judith/controller/ProductController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/alende/judith/controller/impl/CartControllerImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/alende/judith/controller/impl/ProductControllerImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/alende/judith/dto/CartResponse.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/alende/judith/dto/ProductRequest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/alende/judith/dto/ProductResponse.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/com/alende/judith/controller/impl/CartControllerImplTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -13,21 +26,38 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="Interface" />
         <option value="Class" />
+        <option value="JUnit5 Test Class" />
       </list>
     </option>
   </component>
   <component name="Git.Settings">
-    <option name="RECENT_COMMON_BRANCH" value="master" />
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="feature/jalendem-create-controllers" />
+      </map>
+    </option>
+    <option name="RECENT_COMMON_BRANCH" value="main" />
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
     <option name="ROOT_SYNC" value="SYNC" />
   </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;JUTHALEN&quot;
+  }
+}</component>
   <component name="GithubPullRequestsUISettings"><![CDATA[{
   "selectedUrlAndAccountId": {
-    "url": "https://github.com/JUTHALEN/ecommerce.git",
+    "url": "https://github.com/JUTHALEN/e-commerce.git",
     "accountId": "00436225-b931-470f-bf74-c96cc9c14374"
   }
 }]]></component>
+  <component name="ProjectColorInfo"><![CDATA[{
+  "associatedIndex": 8
+}]]></component>
+  <component name="ProjectId" id="2fSpWxR21rev1T7Z9KYkFKUhI6i" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="autoscrollFromSource" value="true" />
@@ -39,25 +69,80 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "ASKED_MARK_IGNORED_FILES_AS_EXCLUDED": "true",
+    "JUnit.ProductServiceImplTest.executor": "Coverage",
+    "JUnit.ProductServiceImplTest.testUpdateProduct_HappyCase.executor": "Run",
+    "JUnit.com.alende.judith.service.impl in cart.executor": "Coverage",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "feature/jalende-create-model",
-    "kotlin-language-version-configured": "true"
+    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
+    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
+    "git-widget-placeholder": "main",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/Users/jalendem/Documents/ecommerce"
   }
 }]]></component>
+  <component name="RecentsManager">
+    <key name="CreateTestDialog.Recents.Supers">
+      <recent name="" />
+    </key>
+    <key name="CreateTestDialog.RecentsKey">
+      <recent name="com.alende.judith.service.impl" />
+    </key>
+  </component>
   <component name="RunManager">
-    <configuration default="true" type="JetRunConfigurationType">
-      <module name="ecommerce" />
+    <configuration name="ProductServiceImplTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="cart" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.alende.judith.service.impl.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.alende.judith.service.impl" />
+      <option name="MAIN_CLASS_NAME" value="com.alende.judith.service.impl.ProductServiceImplTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="ProductServiceImplTest.testUpdateProduct_HappyCase" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="cart" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.alende.judith.service.impl.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.alende.judith.service.impl" />
+      <option name="MAIN_CLASS_NAME" value="com.alende.judith.service.impl.ProductServiceImplTest" />
+      <option name="METHOD_NAME" value="testUpdateProduct_HappyCase" />
+      <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
-      <module name="ecommerce" />
-      <option name="filePath" />
+    <configuration name="com.alende.judith.service.impl in cart" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="cart" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.alende.judith.service.impl.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.alende.judith.service.impl" />
+      <option name="TEST_OBJECT" value="package" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="JUnit.ProductServiceImplTest.testUpdateProduct_HappyCase" />
+        <item itemvalue="JUnit.ProductServiceImplTest" />
+        <item itemvalue="JUnit.com.alende.judith.service.impl in cart" />
+        <item itemvalue="JUnit.com.alende.judith.service.impl in cart" />
+        <item itemvalue="JUnit.ProductServiceImplTest" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -84,11 +169,46 @@
       <option name="project" value="LOCAL" />
       <updated>1713800691111</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="creation main">
+      <option name="closed" value="true" />
+      <created>1713801005297</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1713801005297</updated>
+    </task>
+    <task id="LOCAL-00004" summary="Add Services and ScheduledTasks">
+      <option name="closed" value="true" />
+      <created>1713802227388</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1713802227388</updated>
+    </task>
+    <task id="LOCAL-00005" summary="Add test">
+      <option name="closed" value="true" />
+      <created>1713804449887</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1713804449887</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Model creation" />
-    <option name="LAST_COMMIT_MESSAGE" value="Model creation" />
+    <MESSAGE value="creation main" />
+    <MESSAGE value="Add Services and ScheduledTasks" />
+    <MESSAGE value="Add test" />
+    <option name="LAST_COMMIT_MESSAGE" value="Add test" />
+  </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/ecommerce$ProductServiceImplTest.ic" NAME="ProductServiceImplTest Coverage Results" MODIFIED="1713804231184" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
+      <FILTER>com.alende.judith.service.impl.*</FILTER>
+    </SUITE>
+    <SUITE FILE_PATH="coverage/ecommerce$com_alende_judith_service_impl_in_cart.ic" NAME="com.alende.judith.service.impl in cart Coverage Results" MODIFIED="1713804290192" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
+      <FILTER>com.alende.judith.service.impl.*</FILTER>
+    </SUITE>
   </component>
 </project>
\ No newline at end of file
